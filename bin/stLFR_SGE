#!/usr/bin/perl
use warnings;
use strict;
use Getopt::Long;
use File::Basename;
use FindBin;
use Pod::Usage;
use Cwd;
use lib "$FindBin::RealBin/../lib";
use stLFR;

#=============================================================================#
# parameters
#=============================================================================#
our %OPT = (_argv=>join(" ",@ARGV), _cwd=>cwd());
my $option_success = GetOptions(\%OPT,
  'analysis=s',
  'baseline=s',
  'BWAinMegaBOLT',
  'confbed=s',
  'cpu=i',
  'DeepVariantinMegaBOLT',
  'help',
  'inputdir=s',
  'list=s',
  'man',
  'name=s',
  'outputdir=s',
  'Project=s',
  'position=s',
  'queue=s', 
  'run',
  'software=s',
  'task=i',
  'type=s',
);

die `pod2usage $0` unless $OPT{'help'} || $OPT{'man'} || $OPT{'list'};
pod2usage( -verbose => 0 ) if $OPT{'help'};
pod2usage( -verbose => 2 ) if $OPT{'man'};

#=============================================================================#
# default
#=============================================================================#
$OPT{'list'}        = Cwd::abs_path($OPT{'list'});
$OPT{'outputdir'} ||= "./";
$OPT{'outputdir'}   = Cwd::abs_path($OPT{'outputdir'});
$OPT{'analysis'}  ||= "all";
$OPT{'software'}  ||= "MegaBOLT";
$OPT{'Project'}   ||= "FA2";
$OPT{'queue'}     ||= "mgi.q";
$OPT{'task'}      ||= 1;
$OPT{'boltqueue'} ||= "fpga.q";
$OPT{'position'}  ||= "101_10,117_10,133_10";
$OPT{'type'}      ||= "local";
$OPT{'cpu'}       ||= 60;

#=============================================================================#
# main script
#=============================================================================#

stLFR::run(%OPT);

#=============================================================================#
# run
#=============================================================================#
if($OPT{'run'}){
  `sh $OPT{outputdir}/00.shell/run.sh`;
  print STDERR "
  >> Workflow script:
     $OPT{'outputdir'}/00.shell/run.sh

  >> Results:
     file   : $OPT{'outputdir'}/file
     report : $OPT{'outputdir'}/report

  >> Tips:
     If you want to only build scripts but not run them, you can remove -run option next time.
  ";
}else{
  print STDERR "
  >> Start analysis:
     sh $OPT{'outputdir'}/00.shell/run.sh

  >> Workflow script:
     $OPT{'outputdir'}/00.shell/run.sh

  >> Tips:
     If you want to run your stLFR workflow directly, you can use -run option next time, such as:
     \$ stLFR_SGE -l SAMPLELIST -run
  ";
}
if($OPT{'task'} == 1){
  print STDERR "
  >> Tips:
     Your stLFR tasks will be monitored by QSUBSGE.PL, if you want to monitor your tasks with MONITOR.PY, please set -taks 2, such as:
     \$ stLFR_SGE -l SAMPLE -task 2 -name STLFRPROEJCT

  ";
}else{
  print STDERR "
  >> Tips:
     Your stLFR tasks will be monitored by MONITOR.PY, if you want to monitor your tasks with QSUBSGE.PL, please set -taks 1, such as:
     \$ stLFR_SGE -l SAMPLE -task 1

  ";
}

#=============================================================================#
# usage
#=============================================================================#

=pod

=head1 NAME

stLFR_SGE - process stLFR data on shenzhen-cluster

=head1 SYNOPSIS

  stLFR_SGE [options]

  # run with default options
  stLFR_SGE -l SAMPLELIST

  # run with monitor and MegaBOLT
  stLFR_SGE -l SAMPLELIST -task 2 -software MegaBOLT

  # run with full options
  stLFR_SGE -l SAMPLELIST -task 2 -soft MegaBOLT -Project PROJECT -queue QUEUE.q -analysis align -outputdir OUTPUTDIR -inputdir INPUTDIR

  # brief help
  stLFR_SGE -h

  # man page
  stLFR_SGE -man

=head1 OPTIONS

=head2 Sample List

=over 12

=item -list FILE

  Name of input file. This is required.

  Five columns in the list file, which the front three columns are required:
  1. name    : unique sample ID in this analysis
  2. path    : fastq path(s) for this sample split with colon(:)
  3. barcode : sample-barcode for each path split with colon(:), 0 means all used
  4. reffile : reference with index, two inner options are 'hg19' and 'hs37d5', NULL or '-' means 'hs37d5'
  5. vcffile : dbsnp file, default is NULL or '-'
  6. blacklist : black list file(BED format) for SV
  7. controllist : sorted control list file(BEDPE format) for SV

  eg:  SAM1   /DATA/slide1/L01                    1-4,5,7-9
       SAM2   /DATA/slide1/L01:/DATA/slide2/L01   0:1-8         hg19
       SAM3   /DATA/slide2/L02                    0             REFERENCE/ref.fa      DBSNP/dbsnp.vcf
       SAM4   /DATA/slide2/L03                    0             hs37d5                -                   BLACKLIST    CONTROLLIST

=back

=head2 Previous Result Directory

=over 12

=item -inputdir

  Input directory path with results in previous process. [ ]

  1. align:  need filter result
  2. phase:  need align result
  3. cnvsv:  need align and phase result

=back

=head2 Output Directory

=over 12

=item -outputdir [ ./ ]

  Output directiry path.

  The Format of Output directory (also input directory of this workflow):
  Inputdir/
  |-- 01.filter   // for align
  |   |__ SAMPLE
  |       |__ SAMPLE.clean_1.fq.gz
  |       |__ SAMPLE.clean_2.fq.gz
  |-- 02.align    // for phase, cnv and sv
  |   |__ SAMPLE
  |       |__ SAMPLE.sortdup.bqsr.bam
  |       |__ SAMPLE.sortdup.bqsr.bam.bai
  |       |__ SAMPLE.sortdup.bqsr.bam.HaplotypeCaller.vcf.gz  
  |       |__ SAMPLE.sortdup.bqsr.bam.HaplotypeCaller.vcf.gz.tbi
  |-- 03.phase    // for cnv
  |   |__ SAMPLE
  |       |__ phasesplit
  |           |__ hapblock_SAMPLE_CHROMOSOME  
  |-- 04.cnv
  |   |__ SAMPLE
  |       |__ SAMPLE.CNV.result.xls
  |-- 05.sv
  |   |__ SAMPLE
  |       |__ SAMPLE.SV.simple.result.xls
  |       |__ SAMPLE.SV.complex.result.xls
  |__ file
      |__ SAMPLE
          |-- alignment
          |   |__ SAMPLE.sortdup.bqsr.bam
          |   |__ SAMPLE.sortdup.bqsr.bam.bai
          |-- CNV
          |   |__ SAMPLE.CNV.result.xls
          |-- haplotype
          |   |__ SAMPLE.hapblock
          |   |__ SAMPLE.hapcut_stat.txt
          |   |__ SAMPLE.inked_fragment
          |-- sequence
          |   |__ SAMPLE.clean_1.fq.gz
          |   |__ SAMPLE.clean_2.fq.gz
          |-- SV
          |   |__ SAMPLE.SV.result.xls
          |__ variant 
              |__ SAMPLE.sortdup.bqsr.bam.HaplotypeCaller.vcf.gz
              |__ SAMPLE.sortdup.bqsr.bam.HaplotypeCaller.vcf.gz.tbi

=back

=head2 Analysis Modules

=over 12

=item -analysis  [ all ]

  There are 5 modules in this program: filter, align, phase, cnvsv, report.
    -analysis all  == -analysis filter,align,phase,cnvsv,report.
    -analysis base == -analysis filter,align,phase,report.

  eg: all                : filter + align + phase + cnvsv + report
      base               : filter + align + phase + report
      align              : align + report
      filter,align,phase : filter + align + phase + report

=back

=head2 stLFR barcode position

=over 12

=item -position [ 101_10,117_10,133_10 ]

  Position of stLFR barcodes on read2.

=back

=head2 Align Software

=over 12
  
=item -software  [ MegaBOLT ]

  Software used for align and variant call:
  1. MegaBOLT : MegaBOLT for align and variant call.
  2. BWA      : Bwa-mem for align and GATK-4.0 for variant call.

=item -BWAinMegaBOLT
  
  Using BWA module in MegaBOLT.

=item -DeepVariantinMegaBOLT

  Using BWA + DeepVariant module in MegaBOLT.

=back

=head2 Task Monitor Type

=over 12

=item -type    [ blc ]

  Task monitor type.
  blc:    running on BLC using software defined by -task
  fpga:   running on FPGA server using watchDog
  local:  running on local machine using watchDog

=item -cpu      [ 60 ]

  CPU number on server, using when -type blc and -type fpga

=item -task     [ 1 ]

  Task running model.
  1. qsub-sge.pl
  2. monitor

=item -name

  Task name for -task 2 (monitor) which must be unique in all your tasks.

=back

=head2 Baseline for SNP/INDEL evaluation

=over 12

=item -baseline

Baseline VCF for NA12878 on hg19 or hs37d5.

=item -confbed

High confidence BED for NA12878 on hg19 or hs37d5.

=back

=head2 Queue Information

=over 12

=item -Project  [ FA2 ]

=item -queue    [ mgi.q ]

Project ID and Initial queue for the batch job from a queue

=back

=head2 Usage

=over 12

=item -help

Show brief usage synopsis.

=item -man

Show man page.

=item -run

Run workflow after main shells built.

=back

=head1 AUTHOR

Junhua Rao
L<raojunhua@genomics.cn>
MGI, BGI-Shenzhen, Shenzhen 518083, China

=cut

